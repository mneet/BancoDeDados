-- Criando a tabela usuário
CREATE TABLE [USUARIO]
(
    [COD_USUARIO] INTEGER NOT NULL,
    [LOGIN] NVARCHAR(160)  NOT NULL,
    [SENHA] NVARCHAR(160)  NOT NULL,
    [EMAIL] NVARCHAR(160)  NOT NULL,
    CONSTRAINT [PK_USUARIO] PRIMARY KEY ([COD_USUARIO])
);

CREATE UNIQUE INDEX [IPK_USUARIO] ON [USUARIO]([COD_USUARIO]);

-- Criando a tabela cliente
CREATE TABLE [CLIENTE]
(
    [COD_CLIENTE] INTEGER NOT NULL,
    [COD_USUARIO] INTEGER NOT NULL,
    [NOME] NVARCHAR(160)  NOT NULL,
    [CPF] NVARCHAR(160)  NOT NULL,
    [ENDERECO] NVARCHAR(160)  NOT NULL,
    [TELEFONE] NVARCHAR(160) NOT NULL,
    CONSTRAINT [PK_CLIENTE] PRIMARY KEY ([COD_CLIENTE]),
    CONSTRAINT [FK_USUARIO] FOREIGN KEY ([COD_USUARIO]) REFERENCES USUARIO(COD_USUARIO)
);

CREATE UNIQUE INDEX [IPK_CLIENTE] ON [CLIENTE]([COD_CLIENTE]);

-- CRIANDO A TABELA VENDEDOR
CREATE TABLE [VENDEDOR]
(
	[COD_VENDEDOR] INTEGER NOT NULL,
	[COD_USUARIO] INTEGER NOT NULL,
	[NOME] NVARCHAR(160) NOT NULL,
	[TELEFONE] NVARCHAR(160) NOT NULL,
	[CPF] NVARCHAR(160) NOT NULL,
	CONSTRAINT [PK_VENDEDOR] PRIMARY KEY ([COD_VENDEDOR]),
	CONSTRAINT [FK_USUARIO] FOREIGN KEY ([COD_USUARIO]) REFERENCES USUARIO(COD_USUARIO)
);
CREATE UNIQUE INDEX [IPK_VENDEDOR] ON [VENDEDOR]([COD_VENDEDOR]);

-- CRIANDO A TABELA LOJA FISICA
CREATE TABLE [LOJA_FISICA]
(
	[COD_LOJA_FISICA] INTEGER NOT NULL,
	[NOME] NVARCHAR(160) NOT NULL,
	[ENDERECO] NVARCHAR(160) NOT NULL,
	[TELEFONE] NVARCHAR(160) NOT NULL,
	CONSTRAINT [PK_LOJA_FISICA] PRIMARY KEY ([COD_LOJA_FISICA])
);
CREATE UNIQUE INDEX [IPK_LOJA_FISICA] ON [LOJA_FISICA]([COD_LOJA_FISICA]);

-- CRIANDO TABELA FORMA_DE_PAGAMENTO
CREATE TABLE [FORMA_PAGAMENTO]
(
	[COD_FORMA_PAGAMENTO] INTEGER NOT NULL,
	[FORMA_PAGAMENTO] NVARCHAR(160) NOT NULL,
	CONSTRAINT [PK_FORMA_PAGAMENTO] PRIMARY KEY ([COD_FORMA_PAGAMENTO])
);
CREATE UNIQUE INDEX [IPK_FORMA_PAGAMENTO] ON [FORMA_PAGAMENTO]([COD_FORMA_PAGAMENTO]);

-- CRIANDO TABELA STATUS_PEDIDO
CREATE TABLE [STATUS_PEDIDO]
(
	[COD_STATUS_PEDIDO] INTEGER NOT NULL,
	[STATUS] NVARCHAR(160) NOT NULL,
	[TEMPO_ESPERA] NVARCHAR(160) NOT NULL,
	[STATUS_PAGAMENTO] NVARCHAR(160) NOT NULL,
	CONSTRAINT [PK_STATUS_PEDIDO] PRIMARY KEY ([COD_STATUS_PEDIDO])
);
CREATE UNIQUE INDEX [IPK_STATUS_PEDIDO] ON [STATUS_PEDIDO]([COD_STATUS_PEDIDO]);


-- CRIANDO TABELA PEDIDO
CREATE TABLE [PEDIDO]
(
	[COD_PEDIDO] INTEGER NOT NULL,
	[COD_CLIENTE] INTEGER NOT NULL,
	[COD_VENDEDOR] INTEGER NOT NULL,
	[COD_FORMA_PAGAMENTO] INTEGER NOT NULL,
	[COD_STATUS_PEDIDO] INTEGER NOT NULL,
	[DATA_PEDIDO] DATETIME NOT NULL, 
	[VLR_PEDIDO] FLOAT(8,2) NOT NULL,
	CONSTRAINT [PK_PEDIDO] PRIMARY KEY ([COD_PEDIDO]),
	CONSTRAINT [FK_CLIENTE] FOREIGN KEY ([COD_CLIENTE]) REFERENCES CLIENTE(COD_CLIENTE),
	CONSTRAINT [FK_VENDEDOR] FOREIGN KEY ([COD_VENDEDOR]) REFERENCES VENDEDOR(COD_VENDEDOR),
	CONSTRAINT [FK_FORMA_PAGAMENTO] FOREIGN KEY ([COD_FORMA_PAGAMENTO]) REFERENCES FORMA_PAGAMENTO(COD_FORMA_PAGAMENTO),
	CONSTRAINT [FK_STATUS_PEDIDO] FOREIGN KEY ([COD_STATUS_PEDIDO]) REFERENCES STATUS_PEDIDO(COD_STATUS_PEDIDO)
);
CREATE UNIQUE INDEX [IPK_PEDIDO] ON [PEDIDO]([COD_PEDIDO]);

-- CRIANDO TABELA TIPO_PRODUTO
CREATE TABLE [TIPO_PRODUTO]
(
	[COD_TIPO_PRODUTO] INTEGER NOT NULL,
	[DESCRICAO] NVARCHAR(160) NOT NULL,
	CONSTRAINT [PK_TIPO_PRODUTO] PRIMARY KEY ([COD_TIPO_PRODUTO])
);
CREATE UNIQUE INDEX [IPK_TIPO_PRODUTO] ON [TIPO_PRODUTO]([COD_TIPO_PRODUTO]);

-- CRIANDO TABELA PRODUTO
CREATE TABLE [PRODUTO]
(
	[COD_PRODUTO] INTEGER NOT NULL,
	[COD_TIPO_PRODUTO] INTEGER NOT NULL,
	[NOME] NVARCHAR(160) NOT NULL,
	[VLR_PRODUTO] FLOAT(8,2) NOT NULL,
	CONSTRAINT [PK_PRODUTO] PRIMARY KEY ([COD_PRODUTO]),
	CONSTRAINT [FK_TIPO_PRODUTO] FOREIGN KEY ([COD_TIPO_PRODUTO]) REFERENCES TIPO_PRODUTO(COD_TIPO_PRODUTO)
);
CREATE UNIQUE INDEX [IPK_PRODUTO] ON [PRODUTO]([COD_PRODUTO]);

-- CRIANDO TABELA ITEM_PEDIDO
CREATE TABLE [ITEM_PEDIDO]
(
	[COD_ITEM_PEDIDO] INTEGER NOT NULL,
	[COD_PEDIDO] INTEGER NOT NULL,
	[COD_PRODUTO] INTEGER NOT NULL,
	[QTD_PEDIDO] INTEGER NOT NULL,
	[VLR_ITEM_PEDIDO] FLOAT(8,2) NOT NULL,
	CONSTRAINT [PK_ITEM_PEDIDO] PRIMARY KEY ([COD_ITEM_PEDIDO]),
	CONSTRAINT [FK_PEDIDO] FOREIGN KEY ([COD_PEDIDO]) REFERENCES PEDIDO(COD_PEDIDO),
	CONSTRAINT [FK_PRODUTO] FOREIGN KEY ([COD_PRODUTO]) REFERENCES PRODUTO(COD_PRODUTO)
);
CREATE UNIQUE INDEX [IPK_ITEM_PEDIDO] ON [ITEM_PEDIDO]([COD_ITEM_PEDIDO]);

-- CRIANDO TABELA ESTOQUE
CREATE TABLE [ESTOQUE]
(
	[COD_ESTOQUE] INTEGER NOT NULL,
	[COD_PRODUTO] INTEGER NOT NULL,
	[COD_LOJA_FISICA] INTEGER NOT NULL,
	[QTD_ESTOQUE] INTEGER NOT NULL,
	CONSTRAINT [PK_ESTOQUE] PRIMARY KEY ([COD_ESTOQUE]),
	CONSTRAINT [COD_PRODUTO] FOREIGN KEY ([COD_PRODUTO]) REFERENCES PRODUTO(COD_PRODUTO),
	CONSTRAINT [COD_LOJA_FISICA] FOREIGN KEY ([COD_LOJA_FISICA]) REFERENCES LOJA_FISICA(COD_LOJA_FISICA)
);
CREATE UNIQUE INDEX [IPK_ESTOQUE] ON [ESTOQUE]([COD_ESTOQUE]);

-- CRIANDO TABELA FORNECEDOR
CREATE TABLE [FORNECEDOR]
(
	[COD_FORNECEDOR] INTEGER NOT NULL,
	[COD_LOJA_FISICA] INTEGER NOT NULL,
	[NOME] NVARCHAR(160) NOT NULL,
	[ENDERECO] NVARCHAR(160) NOT NULL,
	[TELEFONE] NVARCHAR(160) NOT NULL,
	CONSTRAINT [PK_FORNECEDOR] PRIMARY KEY ([COD_FORNECEDOR]),
	CONSTRAINT [FK_LOJA_FISICA] FOREIGN KEY ([COD_LOJA_FISICA]) REFERENCES LOJA_FISICA(COD_LOJA_FISICA)
);
CREATE UNIQUE INDEX [IPK_FORNECEDOR] ON [FORNECEDOR]([COD_FORNECEDOR]);

-- CRIANDO TABELA RELATORIO
CREATE TABLE [RELATORIO]
(
	[COD_RELATORIO] INTEGER NOT NULL,
	[COD_LOJA_FISICA] INTEGER NOT NULL,
	[VLR_TOTAL_VENDAS] FLOAT(8,2) NOT NULL,
	[DATA_INICIO] DATETIME NOT NULL,
	[DATA_FIM] DATETIME NOT NULL,
	CONSTRAINT [PK_RELATORIO] PRIMARY KEY ([COD_RELATORIO]),
	CONSTRAINT [FK_LOJA_FISICA] FOREIGN KEY ([COD_LOJA_FISICA]) REFERENCES LOJA_FISICA(COD_LOJA_FISICA)
);
CREATE UNIQUE INDEX [IPK_RELATORIO] ON [RELATORIO]([COD_RELATORIO]);

-- INSERTS

-- Tabela USUARIO
INSERT INTO USUARIO (COD_USUARIO, LOGIN, SENHA, EMAIL) 
VALUES 
(1, 'matheus23', 'senha123', 'matheus@email.com'),
(2, 'carla456', 'senha789', 'carla@email.com'),
(3, 'paulo789', 'senha101', 'paulo@email.com'),
(4, 'lucas222', 'senha333', 'lucas@email.com'),
(5, 'joana', 'senha123', 'joana@email.com'),
(6, 'mariana', 'senha123', 'mariana@email.com'),
(7, 'felipe', 'senha123', 'felipe@email.com'),
(8, 'isabel', 'senha123', 'isabel@email.com');

-- Tabela CLIENTE
INSERT INTO CLIENTE (COD_CLIENTE, COD_USUARIO, NOME, CPF, ENDERECO, TELEFONE) 
VALUES 
(1, 1, 'Matheus', '123.456.789-01', 'Rua Mauricio Andre', '(31)92345-6789'),
(2, 2, 'Carla', '111.222.333-44', 'Rua Central 456', '(31)7654-4321'),
(3, 3, 'Paulo', '555.666.777-88', 'Av. Leste 789', '(31)9876-5432'),
(4, 4, 'Lucas', '999.888.777-66', 'Travessa Oeste 123', '(31)1234-5678');

-- Tabela VENDEDOR
INSERT INTO VENDEDOR (COD_VENDEDOR, COD_USUARIO, NOME, TELEFONE, CPF) 
VALUES 
(1, 5, 'Joana', '(31)98765-4321', '987.654.321-01'),
(2, 6, 'Mariana', '(31)7654-3210', '987.654.321-03'),
(3, 7, 'Felipe', '(31)8765-4321', '123.456.789-04'),
(4, 8, 'Isabel', '(31)2345-6789', '111.222.333-55');

-- Tabela LOJA_FISICA
INSERT INTO LOJA_FISICA (COD_LOJA_FISICA, NOME, ENDERECO, TELEFONE) 
VALUES 
(1, 'Loja Padre Eustaquio', 'Rua Padre Eustáquio 432', '(31) 1111-2222'),
(2, 'Loja Centro', 'Rua do Centro 123', '(31) 5555-6666'),
(3, 'Loja Pampulha', 'Av. da Pampulha 456', '(31) 7777-8888'),
(4, 'Loja Barreiro', 'Rua do Barreiro 789', '(31) 9999-0000');

-- Tabela FORMA_PAGAMENTO
INSERT INTO FORMA_PAGAMENTO (COD_FORMA_PAGAMENTO, FORMA_PAGAMENTO) 
VALUES 
(1, 'Cartao de Credito'),
(2, 'Pix'),
(3, 'Saldo aplicativo'),
(4, 'Cartão de Débito');

-- Tabela PEDIDO
INSERT INTO PEDIDO (COD_PEDIDO, COD_CLIENTE, COD_VENDEDOR, COD_FORMA_PAGAMENTO, COD_STATUS_PEDIDO, DATA_PEDIDO, VLR_PEDIDO) 
VALUES 
(1, 1, 1, 1, 1, '2023-01-01', 100.00),
(2, 2, 2, 2, 1, '2023-03-10', 80.00),
(3, 3, 3, 3, 1, '2023-04-15', 120.00),
(4, 4, 4, 4, 1, '2023-05-20', 150.00);

-- Tabela STATUS_PEDIDO
INSERT INTO STATUS_PEDIDO (COD_STATUS_PEDIDO, STATUS, TEMPO_ESPERA, STATUS_PAGAMENTO) 
VALUES 
(1, 'Em andamento', '30 minutos', 'PAGO'),
(2, 'Entregue', '40 minutos', 'PAGO'),
(3, 'Em andamento', '1 hora', 'AGUARDANDO'),
(4, 'Cancelado', 'Sem tempo estimado', 'CANCELADO');

-- Tabela TIPO_PRODUTO
INSERT INTO TIPO_PRODUTO (COD_TIPO_PRODUTO, DESCRICAO) 
VALUES 
(1, 'CERVEJA'),
(2, 'VINHO'),
(3, 'VODKA'),
(4, 'SEM ÁLCOOL');

-- Tabela PRODUTO
INSERT INTO PRODUTO (COD_PRODUTO, COD_TIPO_PRODUTO, NOME, VLR_PRODUTO) 
VALUES 
(1, 1, 'BRAHMA', 3.50),
(2, 2, 'Chardonnay', 25.00),
(3, 3, 'Absolut', 80.00),
(4, 4, 'Suco de Laranja', 5.00);

-- Tabela ITEM_PEDIDO
INSERT INTO ITEM_PEDIDO (COD_ITEM_PEDIDO, COD_PEDIDO, COD_PRODUTO, QTD_PEDIDO, VLR_ITEM_PEDIDO) 
VALUES 
(1, 1, 1, 2, 7.00),
(2, 2, 2, 1, 25.00),
(3, 3, 3, 2, 160.00),
(4, 4, 4, 3, 15.00);

-- Tabela ESTOQUE
INSERT INTO ESTOQUE (COD_ESTOQUE, COD_PRODUTO, COD_LOJA_FISICA, QTD_ESTOQUE) 
VALUES 
(1, 1, 1, 500),
(2, 2, 2, 100),
(3, 3, 3, 50),
(4, 4, 4, 200);

-- Tabela FORNECEDOR
INSERT INTO FORNECEDOR (COD_FORNECEDOR, COD_LOJA_FISICA, NOME, ENDERECO, TELEFONE) 
VALUES 
(1, 1, 'Ambev', 'Rua Aleatoria 321, Rio de Janeiro', '(21) 5555-6666'),
(2, 2, 'Vinícola XYZ', 'Rua da Vinícola 321, São Paulo', '(11) 1111-2222'),
(3, 3, 'Distribuidora ABC', 'Av. da Distribuição 123, Belo Horizonte', '(31) 4444-5555'),
(4, 4, 'Sucos Naturais S/A', 'Rua dos Frutos 789, Rio de Janeiro', '(21) 3333-4444');

-- Tabela RELATORIO
INSERT INTO RELATORIO (COD_RELATORIO, COD_LOJA_FISICA, VLR_TOTAL_VENDAS, DATA_INICIO, DATA_FIM) 
VALUES 
(1, 1, 5000.00, '2023-01-01', '2023-01-31'),
(2, 2, 2000.00, '2023-03-01', '2023-03-31'),
(3, 3, 3000.00, '2023-04-01', '2023-04-30'),
(4, 4, 2500.00, '2023-05-01', '2023-05-31');

-- UPDATES
-- Update Tabela USUARIO
UPDATE USUARIO SET SENHA = 'novaSenha123' WHERE COD_USUARIO = 1;
UPDATE USUARIO SET EMAIL = 'novoemail@email.com' WHERE COD_USUARIO = 2;
UPDATE USUARIO SET LOGIN = 'outroLogin456', SENHA = 'outraSenha456' WHERE COD_USUARIO = 3;
UPDATE USUARIO SET EMAIL = 'novolucas@email.com' WHERE COD_USUARIO = 4;

-- Update Tabela CLIENTE
UPDATE CLIENTE SET ENDERECO = 'Rua Central 789' WHERE COD_CLIENTE = 1;
UPDATE CLIENTE SET TELEFONE = '(31)9999-9999' WHERE COD_CLIENTE = 2;
UPDATE CLIENTE SET NOME = 'Paulo Silva', CPF = '444.555.666-77', ENDERECO = 'Av. Sul 123' WHERE COD_CLIENTE = 3;
UPDATE CLIENTE SET NOME = 'Lucas Pereira' WHERE COD_CLIENTE = 4;

-- Update Tabela VENDEDOR
UPDATE VENDEDOR SET CPF = '222.222.222-22' WHERE COD_VENDEDOR = 1;
UPDATE VENDEDOR SET NOME = 'Carlos Oliveira', TELEFONE = '(31)5432-1098' WHERE COD_VENDEDOR = 2;
UPDATE VENDEDOR SET CPF = '777.888.999-00', NOME = 'Fernanda Souza' WHERE COD_VENDEDOR = 3;
UPDATE VENDEDOR SET NOME = 'Gabriel Santos', TELEFONE = '(31)8765-4321' WHERE COD_VENDEDOR = 4;

-- Update Tabela LOJA_FISICA
UPDATE LOJA_FISICA SET ENDERECO = 'Rua do Comércio 456' WHERE COD_LOJA_FISICA = 1;
UPDATE LOJA_FISICA SET NOME = 'Loja Centro Atualizada', TELEFONE = '(31)5555-1234' WHERE COD_LOJA_FISICA = 2;
UPDATE LOJA_FISICA SET ENDERECO = 'Av. Oeste 789' WHERE COD_LOJA_FISICA = 3;
UPDATE LOJA_FISICA SET TELEFONE = '(31)9876-5432' WHERE COD_LOJA_FISICA = 4;

-- Update Tabela FORMA_PAGAMENTO
UPDATE FORMA_PAGAMENTO SET FORMA_PAGAMENTO = 'Transferência Bancária' WHERE COD_FORMA_PAGAMENTO = 1;
UPDATE FORMA_PAGAMENTO SET FORMA_PAGAMENTO = 'Dinheiro na Entrega' WHERE COD_FORMA_PAGAMENTO = 2;
UPDATE FORMA_PAGAMENTO SET FORMA_PAGAMENTO = 'Boleto Digital' WHERE COD_FORMA_PAGAMENTO = 3;
UPDATE FORMA_PAGAMENTO SET FORMA_PAGAMENTO = 'Cheque' WHERE COD_FORMA_PAGAMENTO = 4;

-- Update Tabela PEDIDO
UPDATE PEDIDO SET VLR_PEDIDO = 150.00 WHERE COD_PEDIDO = 1;
UPDATE PEDIDO SET COD_FORMA_PAGAMENTO = 3 WHERE COD_PEDIDO = 2;
UPDATE PEDIDO SET DATA_PEDIDO = '2023-05-01' WHERE COD_PEDIDO = 3;
UPDATE PEDIDO SET VLR_PEDIDO = 180.00 WHERE COD_PEDIDO = 4;

-- Update Tabela STATUS_PEDIDO
UPDATE STATUS_PEDIDO SET TEMPO_ESPERA = '2 horas' WHERE COD_STATUS_PEDIDO = 1;
UPDATE STATUS_PEDIDO SET STATUS = 'Concluído' WHERE COD_STATUS_PEDIDO = 2;
UPDATE STATUS_PEDIDO SET STATUS_PAGAMENTO = 'PENDENTE' WHERE COD_STATUS_PEDIDO = 3;
UPDATE STATUS_PEDIDO SET TEMPO_ESPERA = 'Sem tempo estimado' WHERE COD_STATUS_PEDIDO = 4;

-- Update Tabela TIPO_PRODUTO
UPDATE TIPO_PRODUTO SET DESCRICAO = 'DESTILADO' WHERE COD_TIPO_PRODUTO = 1;
UPDATE TIPO_PRODUTO SET DESCRICAO = 'CERVEJA IMPORTADA' WHERE COD_TIPO_PRODUTO = 2;
UPDATE TIPO_PRODUTO SET DESCRICAO = 'VODKA' WHERE COD_TIPO_PRODUTO = 3;
UPDATE TIPO_PRODUTO SET DESCRICAO = 'OUTRAS BEBIDAS' WHERE COD_TIPO_PRODUTO = 4;

-- Update Tabela PRODUTO
UPDATE PRODUTO SET NOME = 'SKYY VODKA' WHERE COD_PRODUTO = 1;
UPDATE PRODUTO SET VLR_PRODUTO = 6.00 WHERE COD_PRODUTO = 2;
UPDATE PRODUTO SET NOME = 'Tanqueray Gin' WHERE COD_PRODUTO = 3;
UPDATE PRODUTO SET VLR_PRODUTO = 7.50 WHERE COD_PRODUTO = 4;

-- Update Tabela ITEM_PEDIDO
UPDATE ITEM_PEDIDO SET QTD_PEDIDO = 3, VLR_ITEM_PEDIDO = 15.00 WHERE COD_ITEM_PEDIDO = 1;
UPDATE ITEM_PEDIDO SET QTD_PEDIDO = 2 WHERE COD_ITEM_PEDIDO = 2;
UPDATE ITEM_PEDIDO SET VLR_ITEM_PEDIDO = 60.00 WHERE COD_ITEM_PEDIDO = 3;
UPDATE ITEM_PEDIDO SET QTD_PEDIDO = 4 WHERE COD_ITEM_PEDIDO = 4;

-- Update Tabela ESTOQUE
UPDATE ESTOQUE SET QTD_ESTOQUE = 800 WHERE COD_ESTOQUE = 1;
UPDATE ESTOQUE SET QTD_ESTOQUE = 90 WHERE COD_ESTOQUE = 2;
UPDATE ESTOQUE SET QTD_ESTOQUE = 220 WHERE COD_ESTOQUE = 3;
UPDATE ESTOQUE SET QTD_ESTOQUE = 250 WHERE COD_ESTOQUE = 4;

-- Update Tabela FORNECEDOR
UPDATE FORNECEDOR SET NOME = 'Distribuidora ABC Atualizada' WHERE COD_FORNECEDOR = 1;
UPDATE FORNECEDOR SET TELEFONE = '(21) 8888-9999' WHERE COD_FORNECEDOR = 2;
UPDATE FORNECEDOR SET ENDERECO = 'Rua dos Fornecedores 321' WHERE COD_FORNECEDOR = 3;
UPDATE FORNECEDOR SET NOME = 'Fornecedora XYZ' WHERE COD_FORNECEDOR = 4;

-- Update Tabela RELATORIO
UPDATE RELATORIO SET VLR_TOTAL_VENDAS = 6200.00 WHERE COD_RELATORIO = 1;
UPDATE RELATORIO SET DATA_INICIO = '2023-01-15' WHERE COD_RELATORIO = 2;
UPDATE RELATORIO SET VLR_TOTAL_VENDAS = 3500.00 WHERE COD_RELATORIO = 3;
UPDATE RELATORIO SET DATA_FIM = '2023-05-31' WHERE COD_RELATORIO = 4;

-- SELECT
-- Select Tabela USUARIO
SELECT * FROM USUARIO WHERE COD_USUARIO = 1;
SELECT LOGIN, EMAIL FROM USUARIO WHERE LOGIN LIKE 'ma%';
SELECT * FROM USUARIO WHERE EMAIL = 'carla@email.com';
SELECT * FROM USUARIO WHERE LOGIN IN ('joana', 'mariana', 'felipe', 'isabel');

-- Select Tabela CLIENTE
SELECT NOME, CPF, ENDERECO, TELEFONE FROM CLIENTE WHERE COD_CLIENTE = 3;
SELECT * FROM CLIENTE WHERE TELEFONE LIKE '(31)%';
SELECT * FROM CLIENTE WHERE COD_USUARIO IN (1, 3, 4, 5);
SELECT * FROM CLIENTE WHERE NOME LIKE 'Lucas%';

-- Select Tabela VENDEDOR
SELECT * FROM VENDEDOR WHERE COD_VENDEDOR = 2;
SELECT NOME, CPF FROM VENDEDOR WHERE TELEFONE LIKE '(31)%';
SELECT * FROM VENDEDOR WHERE NOME = 'Gabriel Santos';
SELECT * FROM VENDEDOR WHERE COD_USUARIO IN (1, 3, 4, 5);

-- Select Tabela LOJA_FISICA
SELECT * FROM LOJA_FISICA WHERE COD_LOJA_FISICA = 1;
SELECT NOME, ENDERECO FROM LOJA_FISICA WHERE TELEFONE LIKE '(31)%';
SELECT * FROM LOJA_FISICA WHERE NOME = 'Loja Pampulha';
SELECT * FROM LOJA_FISICA WHERE COD_LOJA_FISICA IN (1, 3, 4, 5);

-- Select Tabela FORMA_PAGAMENTO
SELECT * FROM FORMA_PAGAMENTO WHERE COD_FORMA_PAGAMENTO = 3;
SELECT FORMA_PAGAMENTO FROM FORMA_PAGAMENTO WHERE FORMA_PAGAMENTO LIKE 'Cartao%';
SELECT * FROM FORMA_PAGAMENTO WHERE FORMA_PAGAMENTO = 'Cheque';
SELECT * FROM FORMA_PAGAMENTO WHERE COD_FORMA_PAGAMENTO IN (1, 3, 4, 5);

-- Select Tabela PEDIDO
SELECT * FROM PEDIDO WHERE COD_PEDIDO = 2;
SELECT COD_CLIENTE, DATA_PEDIDO, VLR_PEDIDO FROM PEDIDO WHERE DATA_PEDIDO BETWEEN '2023-03-01' AND '2023-04-30';
SELECT * FROM PEDIDO WHERE COD_STATUS_PEDIDO = 3;
SELECT * FROM PEDIDO WHERE COD_PEDIDO IN (1, 3, 4, 5);

-- Select Tabela STATUS_PEDIDO
SELECT * FROM STATUS_PEDIDO WHERE COD_STATUS_PEDIDO = 4;
SELECT STATUS, TEMPO_ESPERA FROM STATUS_PEDIDO WHERE STATUS_PAGAMENTO = 'PAGO';
SELECT * FROM STATUS_PEDIDO WHERE TEMPO_ESPERA = '30 minutos';
SELECT * FROM STATUS_PEDIDO WHERE COD_STATUS_PEDIDO IN (1, 3, 4, 5);

-- Select Tabela TIPO_PRODUTO
SELECT * FROM TIPO_PRODUTO WHERE COD_TIPO_PRODUTO = 2;
SELECT DESCRICAO FROM TIPO_PRODUTO WHERE DESCRICAO LIKE 'CERVEJA%';
SELECT * FROM TIPO_PRODUTO WHERE COD_TIPO_PRODUTO = 4;
SELECT * FROM TIPO_PRODUTO WHERE COD_TIPO_PRODUTO IN (1, 3, 4, 5);

-- Select Tabela PRODUTO
SELECT * FROM PRODUTO WHERE COD_PRODUTO = 3;
SELECT NOME, VLR_PRODUTO FROM PRODUTO WHERE VLR_PRODUTO > 5.00;
SELECT * FROM PRODUTO WHERE COD_TIPO_PRODUTO = 1;
SELECT * FROM PRODUTO WHERE COD_PRODUTO IN (1, 3, 4, 5);

-- Select Tabela ITEM_PEDIDO
SELECT * FROM ITEM_PEDIDO WHERE COD_PEDIDO = 3;
SELECT COD_PRODUTO, QTD_PEDIDO, VLR_ITEM_PEDIDO FROM ITEM_PEDIDO WHERE VLR_ITEM_PEDIDO > 10.00;
SELECT * FROM ITEM_PEDIDO WHERE COD_ITEM_PEDIDO = 2;
SELECT * FROM ITEM_PEDIDO WHERE COD_PEDIDO IN (1, 3, 4, 5);

-- Select Tabela ESTOQUE
SELECT * FROM ESTOQUE WHERE COD_LOJA_FISICA = 2;
SELECT COD_PRODUTO, QTD_ESTOQUE FROM ESTOQUE WHERE QTD_ESTOQUE < 200;
SELECT * FROM ESTOQUE WHERE COD_ESTOQUE = 3;
SELECT * FROM ESTOQUE WHERE COD_LOJA_FISICA IN (1, 3, 4, 5);

-- Select Tabela FORNECEDOR
SELECT * FROM FORNECEDOR WHERE COD_FORNECEDOR = 4;
SELECT NOME, TELEFONE FROM FORNECEDOR WHERE ENDERECO LIKE 'Rua%';
SELECT * FROM FORNECEDOR WHERE NOME = 'Fornecedora XYZ';
SELECT * FROM FORNECEDOR WHERE COD_FORNECEDOR IN (1, 3, 4, 5);

-- Select Tabela RELATORIO
SELECT * FROM RELATORIO WHERE COD_RELATORIO = 3;
SELECT * FROM RELATORIO WHERE COD_LOJA_FISICA = 2;
SELECT VLR_TOTAL_VENDAS, DATA_INICIO, DATA_FIM FROM RELATORIO WHERE VLR_TOTAL_VENDAS > 2500.00;
SELECT * FROM RELATORIO WHERE COD_RELATORIO IN (1, 3, 4, 5);

-- DELETE
-- Delete Tabela USUARIO
DELETE FROM USUARIO WHERE COD_USUARIO = 6;
DELETE FROM USUARIO WHERE LOGIN = 'joana';
DELETE FROM USUARIO WHERE EMAIL = 'mariana@email.com';
DELETE FROM USUARIO WHERE COD_USUARIO IN (7, 8, 9);

-- Delete Tabela CLIENTE
DELETE FROM CLIENTE WHERE COD_CLIENTE = 3;
DELETE FROM CLIENTE WHERE NOME = 'Lucas';
DELETE FROM CLIENTE WHERE CPF = '999.888.777-66';
DELETE FROM CLIENTE WHERE COD_CLIENTE IN (4, 5);

-- Delete Tabela VENDEDOR
DELETE FROM VENDEDOR WHERE COD_VENDEDOR = 3;
DELETE FROM VENDEDOR WHERE NOME = 'Felipe';
DELETE FROM VENDEDOR WHERE CPF = '123.456.789-04';
DELETE FROM VENDEDOR WHERE COD_VENDEDOR IN (4, 5);

-- Delete Tabela LOJA_FISICA
DELETE FROM LOJA_FISICA WHERE COD_LOJA_FISICA = 3;
DELETE FROM LOJA_FISICA WHERE NOME = 'Loja Barreiro';
DELETE FROM LOJA_FISICA WHERE TELEFONE = '(31) 7777-8888';
DELETE FROM LOJA_FISICA WHERE COD_LOJA_FISICA IN (4, 5);

-- Delete Tabela FORMA_PAGAMENTO
DELETE FROM FORMA_PAGAMENTO WHERE COD_FORMA_PAGAMENTO = 3;
DELETE FROM FORMA_PAGAMENTO WHERE FORMA_PAGAMENTO = 'Saldo aplicativo';
DELETE FROM FORMA_PAGAMENTO WHERE COD_FORMA_PAGAMENTO IN (4, 5);
DELETE FROM FORMA_PAGAMENTO WHERE FORMA_PAGAMENTO = 'Cartão de Débito';

-- Delete Tabela PEDIDO
DELETE FROM PEDIDO WHERE COD_PEDIDO = 3;
DELETE FROM PEDIDO WHERE VLR_PEDIDO > 100.00;
DELETE FROM PEDIDO WHERE DATA_PEDIDO < '2023-04-15';
DELETE FROM PEDIDO WHERE COD_PEDIDO IN (4, 5);

-- Delete Tabela STATUS_PEDIDO
DELETE FROM STATUS_PEDIDO WHERE COD_STATUS_PEDIDO = 3;
DELETE FROM STATUS_PEDIDO WHERE TEMPO_ESPERA = '1 hora';
DELETE FROM STATUS_PEDIDO WHERE COD_STATUS_PEDIDO IN (4, 5);
DELETE FROM STATUS_PEDIDO WHERE STATUS = 'Cancelado';

-- Delete Tabela TIPO_PRODUTO
DELETE FROM TIPO_PRODUTO WHERE COD_TIPO_PRODUTO = 3;
DELETE FROM TIPO_PRODUTO WHERE DESCRICAO = 'VODKA';
DELETE FROM TIPO_PRODUTO WHERE COD_TIPO_PRODUTO IN (4, 5);
DELETE FROM TIPO_PRODUTO WHERE DESCRICAO = 'SEM ÁLCOOL';

-- Delete Tabela PRODUTO
DELETE FROM PRODUTO WHERE COD_PRODUTO = 3;
DELETE FROM PRODUTO WHERE NOME = 'Absolut';
DELETE FROM PRODUTO WHERE COD_PRODUTO IN (4, 5);
DELETE FROM PRODUTO WHERE NOME = 'Suco de Maçã';

-- Delete Tabela ITEM_PEDIDO
DELETE FROM ITEM_PEDIDO WHERE COD_ITEM_PEDIDO = 3;
DELETE FROM ITEM_PEDIDO WHERE QTD_PEDIDO > 2;
DELETE FROM ITEM_PEDIDO WHERE COD_ITEM_PEDIDO IN (4, 5);
DELETE FROM ITEM_PEDIDO WHERE VLR_ITEM_PEDIDO < 10.00;

-- Delete Tabela ESTOQUE
DELETE FROM ESTOQUE WHERE COD_ESTOQUE = 3;
DELETE FROM ESTOQUE WHERE QTD_ESTOQUE < 200;
DELETE FROM ESTOQUE WHERE COD_ESTOQUE IN (4, 5);
DELETE FROM ESTOQUE WHERE QTD_ESTOQUE > 300;

-- Delete Tabela FORNECEDOR
DELETE FROM FORNECEDOR WHERE COD_FORNECEDOR = 3;
DELETE FROM FORNECEDOR WHERE NOME = 'Distribuidora ABC';
DELETE FROM FORNECEDOR WHERE COD_FORNECEDOR IN (4, 5);
DELETE FROM FORNECEDOR WHERE NOME = 'Sucos Naturais S/A';

-- Delete Tabela RELATORIO
DELETE FROM RELATORIO WHERE COD_RELATORIO = 3;
DELETE FROM RELATORIO WHERE VLR_TOTAL_VENDAS < 2500.00;
DELETE FROM RELATORIO WHERE COD_RELATORIO IN (4, 5);
DELETE FROM RELATORIO WHERE VLR_TOTAL_VENDAS > 3000.00;

-- INNER JOIN
-- 1. Selecionar informações do pedido com detalhes do cliente e vendedor
SELECT 
    P.COD_PEDIDO, 
    P.DATA_PEDIDO, 
    C.NOME AS CLIENTE_NOME, 
    V.NOME AS VENDEDOR_NOME, 
    P.VLR_PEDIDO
FROM 
    PEDIDO P
INNER JOIN 
    CLIENTE C ON P.COD_CLIENTE = C.COD_CLIENTE
INNER JOIN 
    VENDEDOR V ON P.COD_VENDEDOR = V.COD_VENDEDOR;

-- 2. Selecionar detalhes do produto e tipo de produto para cada item de pedido
SELECT 
    IP.COD_ITEM_PEDIDO, 
    IP.QTD_PEDIDO, 
    P.NOME AS PRODUTO_NOME, 
    TP.DESCRICAO AS TIPO_PRODUTO_DESCRICAO
FROM 
    ITEM_PEDIDO IP
INNER JOIN 
    PRODUTO P ON IP.COD_PRODUTO = P.COD_PRODUTO
INNER JOIN 
    TIPO_PRODUTO TP ON P.COD_TIPO_PRODUTO = TP.COD_TIPO_PRODUTO;

-- 3. Selecionar informações do estoque com detalhes do produto e loja física
SELECT 
    E.COD_ESTOQUE, 
    E.QTD_ESTOQUE, 
    P.NOME AS PRODUTO_NOME, 
    LF.NOME AS LOJA_FISICA_NOME
FROM 
    ESTOQUE E
INNER JOIN 
    PRODUTO P ON E.COD_PRODUTO = P.COD_PRODUTO
INNER JOIN 
    LOJA_FISICA LF ON E.COD_LOJA_FISICA = LF.COD_LOJA_FISICA;

-- 4. Selecionar relatórios com detalhes da loja física
SELECT 
    R.COD_RELATORIO, 
    R.VLR_TOTAL_VENDAS, 
    R.DATA_INICIO, 
    R.DATA_FIM, 
    LF.NOME AS LOJA_FISICA_NOME
FROM 
    RELATORIO R
INNER JOIN 
    LOJA_FISICA LF ON R.COD_LOJA_FISICA = LF.COD_LOJA_FISICA;



